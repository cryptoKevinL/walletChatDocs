{
    "swagger": "2.0",
    "info": {
        "description": "This is the WalletChat messagez",
        "title": "WalletChat API",
        "contact": {
            "url": "https://walletchat.fun",
            "email": "walletchatextension@gmail.com"
        },
        "version": "1.0"
    },
    "host": "restwalletchat-app-sey3k.ondigitalocean.app",
    "paths": {
        "/community": {
            "post": {
                "description": "Community Chat Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupChat"
                ],
                "summary": "CreateCommunityChatitem creates GroupChatitem just with community tag (likely could be consolidated)",
                "parameters": [
                    {
                        "description": "Community Message Chat Data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Groupchatitem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Groupchatitem"
                            }
                        }
                    }
                }
            }
        },
        "/create_bookmark": {
            "post": {
                "description": "Bookmarks keep an NFT/Community group chat in the sidebar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupChat"
                ],
                "summary": "Join an NFT or Community group chat",
                "parameters": [
                    {
                        "description": "Add Bookmark from Community Group Chat",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Bookmarkitem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Bookmarkitem"
                            }
                        }
                    }
                }
            }
        },
        "/create_chatitem": {
            "post": {
                "description": "For DMs, CreateChatItem is used to store the message in the backed database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DMs"
                ],
                "summary": "Create/Insert DM chat message (1-to-1 messaging)",
                "parameters": [
                    {
                        "description": "Direct Message Chat Data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Chatitem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Chatitem"
                            }
                        }
                    }
                }
            }
        },
        "/create_groupchatitem": {
            "post": {
                "description": "Currently used for all messages outside of DMs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupChat"
                ],
                "summary": "Create/Insert chat message for Community/NFT/Group Messaging",
                "parameters": [
                    {
                        "description": "Group Message Chat Data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Groupchatitem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Groupchatitem"
                            }
                        }
                    }
                }
            }
        },
        "/delete_bookmark": {
            "post": {
                "description": "Bookmarks keep an NFT/Community group chat in the sidebar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupChat"
                ],
                "summary": "Leave an NFT or Community group chat",
                "parameters": [
                    {
                        "description": "Remove Bookmark from Community Group Chat",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Bookmarkitem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Bookmarkitem"
                            }
                        }
                    }
                }
            }
        },
        "/get_bookmarks/{address}/": {
            "get": {
                "description": "This used for UI purposes, checking if a user/wallet has bookmarked a community.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupChat"
                ],
                "summary": "Check if a wallet address has bookmarked/joined given NFT contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Bookmarkitem"
                            }
                        }
                    }
                }
            }
        },
        "/get_bookmarks/{walletaddr}/{nftaddr}": {
            "get": {
                "description": "This used for UI purposes, checking if a user/wallet has bookmarked a community.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupChat"
                ],
                "summary": "Check if a wallet address has bookmarked/joined given NFT contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "walletaddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NFT Contract Address",
                        "name": "nftaddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "bool"
                        }
                    }
                }
            }
        },
        "/get_groupchatitems/{address}": {
            "get": {
                "description": "Community Chat Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroupChat"
                ],
                "summary": "GetGroupChatItems gets group chat data for a given address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get Group Chat Data Data By Address",
                        "name": "message",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Groupchatitem"
                            }
                        }
                    }
                }
            }
        },
        "/get_inbox/{address}": {
            "get": {
                "description": "Get Each 1-on-1 Conversation, NFT and Community Chat For Display in Inbox",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inbox"
                ],
                "summary": "Get Inbox Summary With Last Message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Chatiteminbox"
                            }
                        }
                    }
                }
            }
        },
        "/get_unread_cnt/{address}": {
            "get": {
                "description": "Get Each 1-on-1 Conversation, NFT and Community Chat For Display in Inbox",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inbox"
                ],
                "summary": "Get all unread messages TO a specific user, used for total count notification at top notification bar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/get_unread_cnt/{address}/{nftaddr}/{nftid}": {
            "get": {
                "description": "Get Unread count for specifc NFT context given a wallet address and specific NFT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get all unread messages for a specific NFT context",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NFT Contract Address",
                        "name": "nftaddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NFT ID",
                        "name": "nftid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/get_unread_cnt/{fromaddr}/{toaddr}": {
            "get": {
                "description": "Get Unread count for DMs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unused/Legacy"
                ],
                "summary": "Get all unread messages between two addresses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TO: Wallet Address",
                        "name": "toaddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "FROM: Wallet Address",
                        "name": "from",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/get_unread_cnt_by_type/{address}/{type}": {
            "get": {
                "description": "Get Each 1-on-1 Conversation, NFT and Community Chat For Display in Inbox",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unused/Legacy"
                ],
                "summary": "Get all unread messages TO a specific user, used for total count notification at top notification bar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message Type - nft|community|dm|all",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/get_unread_cnt_nft/{address}": {
            "get": {
                "description": "Get Unread count for all NFT contexts given a wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unused/Legacy"
                ],
                "summary": "Get all unread messages for all NFT related chats for given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/getall_chatitems/{address}": {
            "get": {
                "description": "Get all Chat Items for DMs for a given wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unused/Legacy"
                ],
                "summary": "Get Chat Item For Given Wallet Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "toaddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Chatitem"
                            }
                        }
                    }
                }
            }
        },
        "/getall_chatitems/{fromaddr}/{toaddr}": {
            "get": {
                "description": "Get chat data between the given two addresses, TO and FROM and interchangable here",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DMs"
                ],
                "summary": "Get Chat Data Between Two Addresses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TO: Wallet Address",
                        "name": "toaddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "FROM: Wallet Address",
                        "name": "from",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Chatitem"
                            }
                        }
                    }
                }
            }
        },
        "/getnft_chatitems/{address}": {
            "get": {
                "description": "Get ALL NFT context items for a given wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unused/Legacy"
                ],
                "summary": "Get NFT Related Chat Items For Given Wallet Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "toaddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Chatitem"
                            }
                        }
                    }
                }
            }
        },
        "/getnft_chatitems/{address}/{nftaddr}/{nftid}": {
            "get": {
                "description": "Get all specified NFT contract and ID items for a given wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unused/Legacy"
                ],
                "summary": "Get NFT Related Chat Items For Given NFT Contract and ID, relating to one wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NFT Contract Address",
                        "name": "nftaddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NFT ID",
                        "name": "nftid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Chatitem"
                            }
                        }
                    }
                }
            }
        },
        "/getnft_chatitems/{fromaddr}/{toaddr}/{nftaddr}/{nftid}": {
            "get": {
                "description": "Get ALL NFT context items for a specifc NFT context convo between two wallets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Related Chat Items For Given NFT Contract and ID, between two wallet addresses (TO and FROM are interchangable)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NFT Contract Address",
                        "name": "nftaddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NFT ID",
                        "name": "nftid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TO: Wallet Address",
                        "name": "toaddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "FROM: Wallet Address",
                        "name": "from",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Chatitem"
                            }
                        }
                    }
                }
            }
        },
        "/getnft_chatitems/{nftaddr}/{nftid}": {
            "get": {
                "description": "Get ALL NFT context items for a given wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unused/Legacy"
                ],
                "summary": "Get NFT Related Chat Items For Given NFT Contract and ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NFT Contract Address",
                        "name": "nftaddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NFT ID",
                        "name": "nftid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Chatitem"
                            }
                        }
                    }
                }
            }
        },
        "/unreadcount/{address}": {
            "get": {
                "description": "Get Unread count just given an address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inbox"
                ],
                "summary": "Get all unread messages TO a specific user, used for total count notification at top notification bar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Bookmarkitem": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nftaddr": {
                    "type": "string"
                },
                "walletaddr": {
                    "type": "string"
                }
            }
        },
        "entity.Chatitem": {
            "type": "object",
            "required": [
                "fromaddr",
                "message",
                "toaddr"
            ],
            "properties": {
                "fromaddr": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "nftaddr": {
                    "type": "string"
                },
                "nftid": {
                    "type": "string"
                },
                "read": {
                    "type": "boolean"
                },
                "sender_name": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "timestamp_dtm": {
                    "type": "string"
                },
                "toaddr": {
                    "type": "string"
                }
            }
        },
        "entity.Chatiteminbox": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "context_type": {
                    "type": "string"
                },
                "fromaddr": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nftaddr": {
                    "type": "string"
                },
                "nftid": {
                    "type": "string"
                },
                "read": {
                    "type": "boolean"
                },
                "sender_name": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "timestamp_dtm": {
                    "type": "string"
                },
                "toaddr": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unread": {
                    "type": "integer"
                }
            }
        },
        "entity.Groupchatitem": {
            "type": "object",
            "properties": {
                "context_type": {
                    "type": "string"
                },
                "fromaddr": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "nftaddr": {
                    "type": "string"
                },
                "sender_name": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "timestamp_dtm": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}